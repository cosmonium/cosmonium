name: build
on: [push, pull_request]
jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Checkout submodules
      run: |
        git submodule sync --recursive
        git submodule update --init --force --recursive --depth=1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo python3 -m pip install --upgrade pip
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config fakeroot python3-dev python3-setuptools software-properties-common libpng-dev libjpeg-dev libtiff-dev zlib1g-dev libssl-dev libx11-dev libgl1-mesa-dev libxrandr-dev libxxf86dga-dev libxcursor-dev bison flex libfreetype6-dev libvorbis-dev libeigen3-dev libopenal-dev libode-dev libbullet-dev nvidia-cg-toolkit libgtk2.0-dev libassimp-dev libopenexr-dev libopusfile-dev libsquish-dev libavcodec-dev libavutil-dev libavformat-dev libswscale-dev
        sudo apt-get install -y libblas3
        curl -L https://github.com/cosmonium/panda3d/releases/download/cosmonium-v1.11.0.dev3368-gd9052bae76/panda3d1.11_1.11.0.dev3368.focal_amd64.deb -o panda3d1.11_1.11.0.focal_amd64.deb
        sudo dpkg -i panda3d1.11_1.11.0.focal_amd64.deb
        curl -L https://github.com/cosmonium/panda3d/releases/download/cosmonium-v1.11.0.dev3368-gd9052bae76/panda3d-1.11.0.dev3368+fp64-cp38-cp38-linux_x86_64.whl -o panda3d-1.11.0-cp38-cp38-linux_x86_64.whl
    - name: Build app
      run: |
        echo "panda3d-1.11.0-cp38-cp38-linux_x86_64.whl" > requirements-tmp.txt
        cat requirements.txt >> requirements-tmp.txt
        make build
        python3 setup.py bdist_apps -p linux_x86_64 -r requirements-tmp.txt
    - name: Test binary
      run: |
        cd build/linux_x86_64
        ./cosmonium --test-start
    - name: Upload logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: linux-logs
        path: ~/.cache/cosmonium/log/output.log
    - name: 'Upload development build'
      if: false && github.ref == 'refs/heads/develop'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-linux"
        prerelease: true
        title: "Linux Development Build"
        files: dist/*

  build-macos:
    runs-on: macos-13
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Checkout submodules
      run: |
        git submodule sync --recursive
        git submodule update --init --force --recursive --depth=1
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Install Panda3D wheel
      run: |
        curl -L https://github.com/cosmonium/panda3d/releases/download/cosmonium-v1.11.0.dev3368-gd9052bae76/panda3d-1.11.0.dev3368+fp64-cp39-cp39-macosx_10_9_x86_64.whl -o panda3d-1.11.0-cp39-cp39-macosx_10_9_x86_64.whl
        python -m pip install panda3d-1.11.0-cp39-cp39-macosx_10_9_x86_64.whl
    - name: Build binary
      run: |
        echo "panda3d-1.11.0-cp39-cp39-macosx_10_9_x86_64.whl" > requirements-tmp.txt
        cat requirements.txt >> requirements-tmp.txt
        python setup.py bdist_apps -p macosx_10_9_x86_64 -r requirements-tmp.txt
    - name: Test binary
      run: |
        cd build/macosx_10_9_x86_64/cosmonium.app/Contents/MacOS
        ./cosmonium --test-start
    - name: Upload logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: macos-logs
        path: ~/Library/Logs/cosmonium/output.log
    - name: 'Upload development build'
      if: false && github.ref == 'refs/heads/develop'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-macos"
        prerelease: true
        title: "MacOS Development Build"
        files: dist/*

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Checkout submodules
      run: |
        git submodule sync --recursive
        git submodule update --init --force --recursive --depth=1
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install pip
      run: |
        python -m pip install --upgrade pip
    - name: Install Panda3D wheel
      shell: powershell
      run: |
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile("https://github.com/cosmonium/panda3d/releases/download/cosmonium-v1.11.0.dev3368-gd9052bae76/panda3d-1.11.0.dev3368+fp64-cp39-cp39-win_amd64.whl", "panda3d-1.11.0+fp64-cp39-cp39-win_amd64.whl")
        python -m pip install panda3d-1.11.0+fp64-cp39-cp39-win_amd64.whl
    - name: Build binary
      run: |
        echo "panda3d-1.11.0+fp64-cp39-cp39-win_amd64.whl" > requirements-tmp.txt
        cat requirements.txt >> requirements-tmp.txt
        python setup.py bdist_apps -p win_amd64 -r requirements-tmp.txt
    - name: Test binary
      run: |
        cd build/win_amd64
        ./cosmonium.exe --test-start | Out-Null
    - name: Upload logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: windows-logs
        path: ~/AppData/Local/Cosmonium/Logs/output.log
    - name: 'Upload development build'
      if: false && github.ref == 'refs/heads/develop'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-windows"
        prerelease: true
        title: "Windows Development Build"
        files: build/*.exe
